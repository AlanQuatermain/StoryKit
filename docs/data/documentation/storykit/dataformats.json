{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/DataFormats"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"variants":[{"paths":["\/documentation\/storykit\/dataformats"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"StoryKit"}],"roleHeading":"Article","title":"Data Formats","role":"article"},"abstract":[{"text":"Understand the on‑disk formats used for authoring, compilation, and runtime.","type":"text"}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Authoring Source","anchor":"Authoring-Source","type":"heading"},{"inlineContent":[{"text":"An authoring source directory typically contains:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["<story-root>\/","  story.json","  texts\/","    <markdown files>.md","  assets\/            (optional)"],"type":"codeListing"},{"level":3,"text":"story.json","anchor":"storyjson","type":"heading"},{"inlineContent":[{"text":"The structure file is a JSON object with these top‑level fields:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"metadata","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, title: String, version: Int }","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"start"},{"text":": ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" — the NodeID where the story begins","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"nodes"},{"text":": ","type":"text"},{"type":"codeVoice","code":"Object"},{"text":" — mapping from NodeID (string) to node objects","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"entities"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from entity id to entity descriptors (declarative only)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"globals"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"{ globalActions: { String: GlobalAction } }"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Node objects:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"id","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" — node identifier (should match the key)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"text","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ file: String, section: String }","type":"codeVoice"},{"text":" — Markdown location","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"tags","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[String]","type":"codeVoice"},{"text":" — optional labels","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"onEnter","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[EffectDescriptor]","type":"codeVoice"},{"text":" — effects applied when entering","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"choices","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[Choice]","type":"codeVoice"},{"text":" — outgoing edges","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"terminal","type":"codeVoice"},{"text":": ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" — optional, defaults to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". When ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", the node is a terminal leaf and is allowed to have no outgoing choices (e.g., endings) without triggering validation warnings.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actors","type":"codeVoice"},{"text":" (optional): ","type":"text"},{"code":"[ActorDescriptor]","type":"codeVoice"},{"text":" — present entities at this location (data‑only)","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Choice objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"id","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"title","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" (optional)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"titleKey","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" (optional, for future localization)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"destination","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" — NodeID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"predicates","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[PredicateDescriptor]","type":"codeVoice"},{"text":" — optional gating checks","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"effects","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[EffectDescriptor]","type":"codeVoice"},{"text":" — optional effects on select","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Descriptor objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"PredicateDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, parameters: { String: String } }","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"EffectDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, parameters: { String: String } }","type":"codeVoice"}]}]}]},{"inlineContent":[{"type":"text","text":"Entity\/actor\/global objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"EntityDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ name?: String, nameKey?: String, tags?: [String], assetKey?: String }","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"ActorDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, ref?: String, name?: String, nameKey?: String, tags?: [String], faction?: String }","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"GlobalAction","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ title?: String, titleKey?: String, destination: String }","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimal example:"}]},{"type":"codeListing","syntax":"json","code":["{","  \"metadata\": { \"id\": \"demo\", \"title\": \"Demo\", \"version\": 1 },","  \"start\": \"a\",","  \"nodes\": {","    \"a\": {","      \"id\": \"a\",","      \"text\": { \"file\": \"t.md\", \"section\": \"a\" },","      \"tags\": [],","      \"actors\": [ { \"id\": \"g1\", \"ref\": \"goblin\" } ],","      \"onEnter\": [],","      \"choices\": [","        { \"id\": \"go\", \"title\": \"Continue\", \"destination\": \"b\", \"predicates\": [], \"effects\": [] }","      ]","    },","    \"b\": {","      \"id\": \"b\",","      \"text\": { \"file\": \"t.md\", \"section\": \"b\" },","      \"tags\": [],","      \"onEnter\": [],","      \"choices\": [],","      \"terminal\": true","    }","  },","  \"entities\": {","    \"goblin\": { \"name\": \"Goblin\", \"tags\": [\"hostile\"] }","  },","  \"globals\": {","    \"globalActions\": {","      \"playerDied\": { \"title\": \"You Died\", \"destination\": \"b\" }","    }","  }","}"]},{"level":3,"anchor":"Markdown-text-files","text":"Markdown text files","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files can contain multiple sections, delimited by a line of the form:"}]},{"type":"codeListing","syntax":null,"code":["=== node: <section-id> ==="]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example ("},{"code":"texts\/t.md","type":"codeVoice"},{"type":"text","text":"):"}]},{"type":"codeListing","syntax":null,"code":["=== node: a ===","You wake up to the sound of rain.","","=== node: b ===","You step into the hallway."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoding is assumed to be UTF‑8."}]},{"level":2,"anchor":"Compiled-Bundle-storybundle","text":"Compiled Bundle (.storybundle)","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler produces a directory‑based bundle that mirrors the source in a normalized form:"}]},{"type":"codeListing","syntax":null,"code":["My.storybundle\/","  manifest.json","  graph.json","  texts\/","    *.md"]},{"level":3,"anchor":"graphjson","text":"graph.json","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"graph.json","type":"codeVoice"},{"type":"text","text":" is the normalized story graph used by the runtime. It has the same JSON shape as "},{"code":"story.json","type":"codeVoice"},{"type":"text","text":" but is produced by the compiler (e.g., after transforms). In the initial implementation, it is a copy of "},{"code":"story.json","type":"codeVoice"},{"type":"text","text":"."}]},{"level":3,"anchor":"manifestjson","text":"manifest.json","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The manifest records basic metadata about the compiled bundle:"}]},{"type":"codeListing","syntax":"json","code":["{","  \"schemaVersion\": 1,","  \"storyID\": \"demo\",","  \"title\": \"Demo\",","  \"version\": 1,","  \"graphHashSHA256\": \"<hex sha256 of graph.json>\",","  \"builtAt\": 1737072000","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"schemaVersion"},{"type":"text","text":": Monotonically increasing schema identifier."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"storyID"},{"type":"text","text":", "},{"type":"codeVoice","code":"title"},{"type":"text","text":", "},{"type":"codeVoice","code":"version"},{"type":"text","text":": Copied from story metadata."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graphHashSHA256"},{"type":"text","text":": Hex‑encoded SHA‑256 of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" for integrity."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"builtAt"},{"type":"text","text":": Build timestamp as encoded by "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" (numeric seconds by default)."}]}]}],"type":"unorderedList"},{"level":3,"anchor":"texts","text":"texts\/","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files are copied from the source "},{"code":"texts\/","type":"codeVoice"},{"type":"text","text":" directory without modification. They are resolved at runtime by the text providers."}]},{"level":2,"anchor":"Graph-Exports-CLI","text":"Graph Exports (CLI)","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"storykit graph","type":"codeVoice"},{"type":"text","text":" command can export edges in several formats (written to stdout by default):"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": One line per edge — "},{"type":"codeVoice","code":"from -> to"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"dot"},{"type":"text","text":": GraphViz DOT — declares nodes and edges, suitable for visualization."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"json"},{"type":"text","text":": Array of edges — "},{"type":"codeVoice","code":"[ { \"from\": String, \"to\": String } ]"},{"type":"text","text":"."}]}]}],"type":"unorderedList"}]}],"sections":[],"references":{"doc://StoryKit/documentation/StoryKit":{"kind":"symbol","role":"collection","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","url":"\/documentation\/storykit","abstract":[{"type":"text","text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling."}],"type":"topic","title":"StoryKit"}}}