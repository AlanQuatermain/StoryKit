{"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/DataFormats"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/storykit\/dataformats"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Understand the on‑disk formats used for authoring, compilation, and runtime."}],"primaryContentSections":[{"content":[{"type":"heading","text":"Authoring Source","anchor":"Authoring-Source","level":2},{"type":"paragraph","inlineContent":[{"text":"An authoring source directory typically contains:","type":"text"}]},{"code":["<story-root>\/","  story.json","  texts\/","    <markdown files>.md","  assets\/            (optional)"],"syntax":null,"type":"codeListing"},{"text":"story.json","anchor":"storyjson","type":"heading","level":3},{"inlineContent":[{"text":"The structure file is a JSON object with these top‑level fields:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"metadata","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, title: String, version: Int }","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"start","type":"codeVoice"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" — the NodeID where the story begins"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"nodes"},{"type":"text","text":": "},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from NodeID (string) to node objects"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"entities"},{"text":" (optional): ","type":"text"},{"code":"Object","type":"codeVoice"},{"text":" — mapping from entity id to entity descriptors (declarative only)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"globals"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"{ globalActions: { String: GlobalAction } }"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Node objects:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"id","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" — node identifier (should match the key)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"text","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ file: String, section: String }","type":"codeVoice"},{"type":"text","text":" — Markdown location"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"tags","type":"codeVoice"},{"text":": ","type":"text"},{"type":"codeVoice","code":"[String]"},{"text":" — optional labels","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"onEnter","type":"codeVoice"},{"type":"text","text":": "},{"type":"codeVoice","code":"[EffectDescriptor]"},{"type":"text","text":" — effects applied when entering"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"choices"},{"type":"text","text":": "},{"code":"[Choice]","type":"codeVoice"},{"text":" — outgoing edges","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"terminal"},{"type":"text","text":": "},{"type":"codeVoice","code":"Bool"},{"text":" — optional, defaults to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". When ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", the node is a terminal leaf and is allowed to have no outgoing choices (e.g., endings) without triggering validation warnings.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"actors","type":"codeVoice"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"[ActorDescriptor]"},{"text":" — present entities at this location (data‑only)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Choice objects:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"id"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"title"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional)"}]}]},{"content":[{"inlineContent":[{"code":"titleKey","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" (optional, for future localization)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"destination"},{"text":": ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" — NodeID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"predicates","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[PredicateDescriptor]","type":"codeVoice"},{"type":"text","text":" — optional gating checks"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"effects"},{"type":"text","text":": "},{"type":"codeVoice","code":"[EffectDescriptor]"},{"text":" — optional effects on select","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Descriptor objects:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"PredicateDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EffectDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]}]},{"inlineContent":[{"type":"text","text":"Entity\/actor\/global objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"EntityDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"type":"codeVoice","code":"{ name?: String, nameKey?: String, tags?: [String], assetKey?: String }"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ActorDescriptor"},{"text":": ","type":"text"},{"type":"codeVoice","code":"{ id: String, ref?: String, name?: String, nameKey?: String, tags?: [String], faction?: String }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GlobalAction"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ title?: String, titleKey?: String, destination: String }"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Minimal example:","type":"text"}]},{"type":"codeListing","syntax":"json","code":["{","  \"metadata\": { \"id\": \"demo\", \"title\": \"Demo\", \"version\": 1 },","  \"start\": \"a\",","  \"nodes\": {","    \"a\": {","      \"id\": \"a\",","      \"text\": { \"file\": \"t.md\", \"section\": \"a\" },","      \"tags\": [],","      \"actors\": [ { \"id\": \"g1\", \"ref\": \"goblin\" } ],","      \"onEnter\": [],","      \"choices\": [","        { \"id\": \"go\", \"title\": \"Continue\", \"destination\": \"b\", \"predicates\": [], \"effects\": [] }","      ]","    },","    \"b\": {","      \"id\": \"b\",","      \"text\": { \"file\": \"t.md\", \"section\": \"b\" },","      \"tags\": [],","      \"onEnter\": [],","      \"choices\": [],","      \"terminal\": true","    }","  },","  \"entities\": {","    \"goblin\": { \"name\": \"Goblin\", \"tags\": [\"hostile\"] }","  },","  \"globals\": {","    \"globalActions\": {","      \"playerDied\": { \"title\": \"You Died\", \"destination\": \"b\" }","    }","  }","}"]},{"type":"heading","level":3,"text":"Markdown text files","anchor":"Markdown-text-files"},{"inlineContent":[{"text":"Markdown files can contain multiple sections, delimited by a line of the form:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["=== node: <section-id> ==="]},{"inlineContent":[{"text":"Example (","type":"text"},{"code":"texts\/t.md","type":"codeVoice"},{"text":"):","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["=== node: a ===","You wake up to the sound of rain.","","=== node: b ===","You step into the hallway."]},{"inlineContent":[{"type":"text","text":"Encoding is assumed to be UTF‑8."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Compiled Bundle (.storybundle)","anchor":"Compiled-Bundle-storybundle"},{"inlineContent":[{"text":"The compiler produces a directory‑based bundle that mirrors the source in a normalized form:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["My.storybundle\/","  manifest.json","  graph.json","  texts\/","    *.md"]},{"type":"heading","level":3,"text":"graph.json","anchor":"graphjson"},{"inlineContent":[{"code":"graph.json","type":"codeVoice"},{"text":" is the normalized story graph used by the runtime. It has the same JSON shape as ","type":"text"},{"code":"story.json","type":"codeVoice"},{"text":" but is produced by the compiler (e.g., after transforms). In the initial implementation, it is a copy of ","type":"text"},{"code":"story.json","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"level":3,"text":"manifest.json","type":"heading","anchor":"manifestjson"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The manifest records basic metadata about the compiled bundle:"}]},{"type":"codeListing","syntax":"json","code":["{","  \"schemaVersion\": 1,","  \"storyID\": \"demo\",","  \"title\": \"Demo\",","  \"version\": 1,","  \"graphHashSHA256\": \"<hex sha256 of graph.json>\",","  \"builtAt\": 1737072000","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"schemaVersion"},{"type":"text","text":": Monotonically increasing schema identifier."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"storyID"},{"text":", ","type":"text"},{"type":"codeVoice","code":"title"},{"text":", ","type":"text"},{"type":"codeVoice","code":"version"},{"text":": Copied from story metadata.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graphHashSHA256"},{"type":"text","text":": Hex‑encoded SHA‑256 of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" for integrity."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"builtAt"},{"type":"text","text":": Build timestamp as encoded by "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" (numeric seconds by default)."}],"type":"paragraph"}]}]},{"text":"texts\/","level":3,"anchor":"texts","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Markdown files are copied from the source ","type":"text"},{"code":"texts\/","type":"codeVoice"},{"text":" directory without modification. They are resolved at runtime by the text providers.","type":"text"}]},{"text":"Graph Exports (CLI)","level":2,"anchor":"Graph-Exports-CLI","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"storykit graph"},{"text":" command can export edges in several formats (written to stdout by default):","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"text"},{"text":": One line per edge — ","type":"text"},{"type":"codeVoice","code":"from -> to"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"dot"},{"text":": GraphViz DOT — declares nodes and edges, suitable for visualization.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"json","type":"codeVoice"},{"text":": Array of edges — ","type":"text"},{"code":"[ { \"from\": String, \"to\": String } ]","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"article","metadata":{"modules":[{"name":"StoryKit"}],"roleHeading":"Article","role":"article","title":"Data Formats"},"references":{"doc://StoryKit/documentation/StoryKit":{"role":"collection","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","type":"topic","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"title":"StoryKit","kind":"symbol","url":"\/documentation\/storykit"}}}