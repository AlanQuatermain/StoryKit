{"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Authoring Source","anchor":"Authoring-Source"},{"inlineContent":[{"type":"text","text":"An authoring source directory typically contains:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["<story-root>\/","  story.json","  texts\/","    <markdown files>.md","  assets\/            (optional)"]},{"anchor":"storyjson","level":3,"type":"heading","text":"story.json"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The structure file is a JSON object with these top‑level fields:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"metadata"},{"text":": ","type":"text"},{"type":"codeVoice","code":"{ id: String, title: String, version: Int }"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"start"},{"type":"text","text":": "},{"code":"String","type":"codeVoice"},{"type":"text","text":" — the NodeID where the story begins"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"nodes"},{"type":"text","text":": "},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from NodeID (string) to node objects"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"entities","type":"codeVoice"},{"text":" (optional): ","type":"text"},{"code":"Object","type":"codeVoice"},{"text":" — mapping from entity id to entity descriptors (declarative only)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"globals"},{"text":" (optional): ","type":"text"},{"type":"codeVoice","code":"{ globalActions: { String: GlobalAction } }"}]}]}]},{"inlineContent":[{"text":"Node objects:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"id","type":"codeVoice"},{"type":"text","text":": "},{"code":"String","type":"codeVoice"},{"type":"text","text":" — node identifier (should match the key)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ file: String, section: String }"},{"type":"text","text":" — Markdown location"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tags"},{"text":": ","type":"text"},{"type":"codeVoice","code":"[String]"},{"text":" — optional labels","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"onEnter","type":"codeVoice"},{"text":": ","type":"text"},{"type":"codeVoice","code":"[EffectDescriptor]"},{"text":" — effects applied when entering","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"choices","type":"codeVoice"},{"text":": ","type":"text"},{"code":"[Choice]","type":"codeVoice"},{"type":"text","text":" — outgoing edges"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"actors"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"[ActorDescriptor]"},{"type":"text","text":" — present entities at this location (data‑only)"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Choice objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"id"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"title"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"titleKey"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional, for future localization)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"destination"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" — NodeID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"predicates"},{"type":"text","text":": "},{"type":"codeVoice","code":"[PredicateDescriptor]"},{"type":"text","text":" — optional gating checks"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"effects"},{"type":"text","text":": "},{"type":"codeVoice","code":"[EffectDescriptor]"},{"type":"text","text":" — optional effects on select"}]}]}]},{"inlineContent":[{"type":"text","text":"Descriptor objects:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"PredicateDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EffectDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]}]},{"inlineContent":[{"type":"text","text":"Entity\/actor\/global objects:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"EntityDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ name?: String, nameKey?: String, tags?: [String], assetKey?: String }"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ActorDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, ref?: String, name?: String, nameKey?: String, tags?: [String], faction?: String }"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"GlobalAction"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ title?: String, titleKey?: String, destination: String }"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimal example:"}]},{"type":"codeListing","code":["{","  \"metadata\": { \"id\": \"demo\", \"title\": \"Demo\", \"version\": 1 },","  \"start\": \"a\",","  \"nodes\": {","    \"a\": {","      \"id\": \"a\",","      \"text\": { \"file\": \"t.md\", \"section\": \"a\" },","      \"tags\": [],","      \"actors\": [ { \"id\": \"g1\", \"ref\": \"goblin\" } ],","      \"onEnter\": [],","      \"choices\": [","        { \"id\": \"go\", \"title\": \"Continue\", \"destination\": \"b\", \"predicates\": [], \"effects\": [] }","      ]","    },","    \"b\": {","      \"id\": \"b\",","      \"text\": { \"file\": \"t.md\", \"section\": \"b\" },","      \"tags\": [],","      \"onEnter\": [],","      \"choices\": []","    }","  },","  \"entities\": {","    \"goblin\": { \"name\": \"Goblin\", \"tags\": [\"hostile\"] }","  },","  \"globals\": {","    \"globalActions\": {","      \"playerDied\": { \"title\": \"You Died\", \"destination\": \"b\" }","    }","  }","}"],"syntax":"json"},{"type":"heading","level":3,"text":"Markdown text files","anchor":"Markdown-text-files"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files can contain multiple sections, delimited by a line of the form:"}]},{"type":"codeListing","code":["=== node: <section-id> ==="],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example ("},{"type":"codeVoice","code":"texts\/t.md"},{"type":"text","text":"):"}]},{"type":"codeListing","code":["=== node: a ===","You wake up to the sound of rain.","","=== node: b ===","You step into the hallway."],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoding is assumed to be UTF‑8."}]},{"type":"heading","level":2,"text":"Compiled Bundle (.storybundle)","anchor":"Compiled-Bundle-storybundle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler produces a directory‑based bundle that mirrors the source in a normalized form:"}]},{"type":"codeListing","code":["My.storybundle\/","  manifest.json","  graph.json","  texts\/","    *.md"],"syntax":null},{"type":"heading","level":3,"text":"graph.json","anchor":"graphjson"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" is the normalized story graph used by the runtime. It has the same JSON shape as "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":" but is produced by the compiler (e.g., after transforms). In the initial implementation, it is a copy of "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":"."}]},{"type":"heading","level":3,"text":"manifest.json","anchor":"manifestjson"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The manifest records basic metadata about the compiled bundle:"}]},{"type":"codeListing","code":["{","  \"schemaVersion\": 1,","  \"storyID\": \"demo\",","  \"title\": \"Demo\",","  \"version\": 1,","  \"graphHashSHA256\": \"<hex sha256 of graph.json>\",","  \"builtAt\": 1737072000","}"],"syntax":"json"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"schemaVersion"},{"type":"text","text":": Monotonically increasing schema identifier."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"storyID"},{"type":"text","text":", "},{"type":"codeVoice","code":"title"},{"type":"text","text":", "},{"type":"codeVoice","code":"version"},{"type":"text","text":": Copied from story metadata."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"graphHashSHA256"},{"type":"text","text":": Hex‑encoded SHA‑256 of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" for integrity."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"builtAt"},{"type":"text","text":": Build timestamp as encoded by "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" (numeric seconds by default)."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"texts","level":3,"text":"texts\/"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files are copied from the source "},{"type":"codeVoice","code":"texts\/"},{"type":"text","text":" directory without modification. They are resolved at runtime by the text providers."}]},{"type":"heading","anchor":"Graph-Exports-CLI","level":2,"text":"Graph Exports (CLI)"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"storykit graph"},{"type":"text","text":" command can export edges in several formats (written to stdout by default):"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": One line per edge — "},{"type":"codeVoice","code":"from -> to"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"dot"},{"type":"text","text":": GraphViz DOT — declares nodes and edges, suitable for visualization."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"json"},{"type":"text","text":": Array of edges — "},{"type":"codeVoice","code":"[ { \"from\": String, \"to\": String } ]"},{"type":"text","text":"."}],"type":"paragraph"}]}]}]}],"abstract":[{"type":"text","text":"Understand the on‑disk formats used for authoring, compilation, and runtime."}],"kind":"article","hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"metadata":{"modules":[{"name":"StoryKit"}],"role":"article","title":"Data Formats","roleHeading":"Article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/dataformats"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/DataFormats","interfaceLanguage":"swift"},"references":{"doc://StoryKit/documentation/StoryKit":{"role":"collection","kind":"symbol","title":"StoryKit","type":"topic","url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}]}}}