{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/dataformats"]}],"abstract":[{"type":"text","text":"Understand the on‑disk formats used for authoring, compilation, and runtime."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Authoring Source","anchor":"Authoring-Source"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An authoring source directory typically contains:"}]},{"type":"codeListing","code":["<story-root>\/","  story.json","  texts\/","    <markdown files>.md","  assets\/            (optional)"],"syntax":null},{"type":"heading","level":3,"text":"story.json","anchor":"storyjson"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The structure file is a JSON object with these top‑level fields:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"metadata"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, title: String, version: Int }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"start"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" — the NodeID where the story begins"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"nodes"},{"type":"text","text":": "},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from NodeID (string) to node objects"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"entities"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from entity id to entity descriptors (declarative only)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"globals"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"{ globalActions: { String: GlobalAction } }"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Node objects:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"id"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" — node identifier (should match the key)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ file: String, section: String }"},{"type":"text","text":" — Markdown location"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tags"},{"type":"text","text":": "},{"type":"codeVoice","code":"[String]"},{"type":"text","text":" — optional labels"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onEnter"},{"type":"text","text":": "},{"type":"codeVoice","code":"[EffectDescriptor]"},{"type":"text","text":" — effects applied when entering"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"choices"},{"type":"text","text":": "},{"type":"codeVoice","code":"[Choice]"},{"type":"text","text":" — outgoing edges"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"terminal"},{"type":"text","text":": "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" — optional, defaults to "},{"type":"codeVoice","code":"false"},{"type":"text","text":". When "},{"type":"codeVoice","code":"true"},{"type":"text","text":", the node is a terminal leaf and is allowed to have no outgoing choices (e.g., endings) without triggering validation warnings."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actors"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"[ActorDescriptor]"},{"type":"text","text":" — present entities at this location (data‑only)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Choice objects:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"id"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"title"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"titleKey"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional, for future localization)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"destination"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" — NodeID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"predicates"},{"type":"text","text":": "},{"type":"codeVoice","code":"[PredicateDescriptor]"},{"type":"text","text":" — optional gating checks"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"effects"},{"type":"text","text":": "},{"type":"codeVoice","code":"[EffectDescriptor]"},{"type":"text","text":" — optional effects on select"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Descriptor objects:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"PredicateDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EffectDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity\/actor\/global objects:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EntityDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ name?: String, nameKey?: String, tags?: [String], assetKey?: String }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ActorDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, ref?: String, name?: String, nameKey?: String, tags?: [String], faction?: String }"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GlobalAction"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ title?: String, titleKey?: String, destination: String }"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Minimal example:"}]},{"type":"codeListing","code":["{","  \"metadata\": { \"id\": \"demo\", \"title\": \"Demo\", \"version\": 1 },","  \"start\": \"a\",","  \"nodes\": {","    \"a\": {","      \"id\": \"a\",","      \"text\": { \"file\": \"t.md\", \"section\": \"a\" },","      \"tags\": [],","      \"actors\": [ { \"id\": \"g1\", \"ref\": \"goblin\" } ],","      \"onEnter\": [],","      \"choices\": [","        { \"id\": \"go\", \"title\": \"Continue\", \"destination\": \"b\", \"predicates\": [], \"effects\": [] }","      ]","    },","    \"b\": {","      \"id\": \"b\",","      \"text\": { \"file\": \"t.md\", \"section\": \"b\" },","      \"tags\": [],","      \"onEnter\": [],","      \"choices\": [],","      \"terminal\": true","    }","  },","  \"entities\": {","    \"goblin\": { \"name\": \"Goblin\", \"tags\": [\"hostile\"] }","  },","  \"globals\": {","    \"globalActions\": {","      \"playerDied\": { \"title\": \"You Died\", \"destination\": \"b\" }","    }","  }","}"],"syntax":"json"},{"type":"heading","level":3,"text":"Markdown text files","anchor":"Markdown-text-files"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files can contain multiple sections, delimited by a line of the form:"}]},{"type":"codeListing","code":["=== node: <section-id> ==="],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example ("},{"type":"codeVoice","code":"texts\/t.md"},{"type":"text","text":"):"}]},{"type":"codeListing","code":["=== node: a ===","You wake up to the sound of rain.","","=== node: b ===","You step into the hallway."],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoding is assumed to be UTF‑8."}]},{"type":"heading","level":2,"text":"Compiled Bundle (.storybundle)","anchor":"Compiled-Bundle-storybundle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler produces a directory‑based bundle that mirrors the source in a normalized form:"}]},{"type":"codeListing","code":["My.storybundle\/","  manifest.json","  graph.json","  texts\/","    *.md"],"syntax":null},{"type":"heading","level":3,"text":"graph.json","anchor":"graphjson"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" is the normalized story graph used by the runtime. It has the same JSON shape as "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":" but is produced by the compiler (e.g., after transforms). In the initial implementation, it is a copy of "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":"."}]},{"type":"heading","level":3,"text":"manifest.json","anchor":"manifestjson"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The manifest records basic metadata about the compiled bundle:"}]},{"type":"codeListing","code":["{","  \"schemaVersion\": 1,","  \"storyID\": \"demo\",","  \"title\": \"Demo\",","  \"version\": 1,","  \"graphHashSHA256\": \"<hex sha256 of graph.json>\",","  \"builtAt\": 1737072000","}"],"syntax":"json"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"schemaVersion"},{"type":"text","text":": Monotonically increasing schema identifier."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"storyID"},{"type":"text","text":", "},{"type":"codeVoice","code":"title"},{"type":"text","text":", "},{"type":"codeVoice","code":"version"},{"type":"text","text":": Copied from story metadata."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graphHashSHA256"},{"type":"text","text":": Hex‑encoded SHA‑256 of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" for integrity."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"builtAt"},{"type":"text","text":": Build timestamp as encoded by "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" (numeric seconds by default)."}]}]}]},{"type":"heading","level":3,"text":"texts\/","anchor":"texts"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markdown files are copied from the source "},{"type":"codeVoice","code":"texts\/"},{"type":"text","text":" directory without modification. They are resolved at runtime by the text providers."}]},{"type":"heading","level":2,"text":"Graph Exports (CLI)","anchor":"Graph-Exports-CLI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"storykit graph"},{"type":"text","text":" command can export edges in several formats (written to stdout by default):"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": One line per edge — "},{"type":"codeVoice","code":"from -> to"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"dot"},{"type":"text","text":": GraphViz DOT — declares nodes and edges, suitable for visualization."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"json"},{"type":"text","text":": Array of edges — "},{"type":"codeVoice","code":"[ { \"from\": String, \"to\": String } ]"},{"type":"text","text":"."}]}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/DataFormats"},"sections":[],"metadata":{"roleHeading":"Article","title":"Data Formats","modules":[{"name":"StoryKit"}],"role":"article"},"references":{"doc://StoryKit/documentation/StoryKit":{"type":"topic","kind":"symbol","role":"collection","title":"StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit"}}}