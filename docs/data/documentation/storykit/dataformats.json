{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/dataformats"]}],"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"kind":"article","abstract":[{"type":"text","text":"Understand the on‑disk formats used for authoring, compilation, and runtime."}],"metadata":{"role":"article","modules":[{"name":"StoryKit"}],"roleHeading":"Article","title":"Data Formats"},"identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/DataFormats","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Authoring-Source","level":2,"text":"Authoring Source"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An authoring source directory typically contains:"}]},{"code":["<story-root>\/","  story.json","  texts\/","    <markdown files>.md","  assets\/            (optional)"],"type":"codeListing","syntax":null},{"level":3,"anchor":"storyjson","text":"story.json","type":"heading"},{"inlineContent":[{"text":"The structure file is a JSON object with these top‑level fields:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"metadata","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ id: String, title: String, version: Int }","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"start","type":"codeVoice"},{"text":": ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" — the NodeID where the story begins","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"nodes","type":"codeVoice"},{"text":": ","type":"text"},{"type":"codeVoice","code":"Object"},{"type":"text","text":" — mapping from NodeID (string) to node objects"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"entities"},{"type":"text","text":" (optional): "},{"type":"codeVoice","code":"Object"},{"text":" — mapping from entity id to entity descriptors (declarative only)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"globals"},{"type":"text","text":" (optional): "},{"code":"{ globalActions: { String: GlobalAction } }","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Node objects:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"id"},{"text":": ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" — node identifier (should match the key)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ file: String, section: String }"},{"type":"text","text":" — Markdown location"}]}]},{"content":[{"inlineContent":[{"code":"tags","type":"codeVoice"},{"type":"text","text":": "},{"code":"[String]","type":"codeVoice"},{"type":"text","text":" — optional labels"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onEnter"},{"text":": ","type":"text"},{"type":"codeVoice","code":"[EffectDescriptor]"},{"text":" — effects applied when entering","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"choices"},{"type":"text","text":": "},{"type":"codeVoice","code":"[Choice]"},{"type":"text","text":" — outgoing edges"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"terminal","type":"codeVoice"},{"text":": ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" — optional, defaults to "},{"type":"codeVoice","code":"false"},{"text":". When ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", the node is a terminal leaf and is allowed to have no outgoing choices (e.g., endings) without triggering validation warnings.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actors","type":"codeVoice"},{"type":"text","text":" (optional): "},{"code":"[ActorDescriptor]","type":"codeVoice"},{"type":"text","text":" — present entities at this location (data‑only)"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Choice objects:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"id"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"title"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"titleKey"},{"type":"text","text":": "},{"type":"codeVoice","code":"String"},{"type":"text","text":" (optional, for future localization)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"destination"},{"type":"text","text":": "},{"code":"String","type":"codeVoice"},{"type":"text","text":" — NodeID"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"predicates"},{"type":"text","text":": "},{"type":"codeVoice","code":"[PredicateDescriptor]"},{"type":"text","text":" — optional gating checks"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"effects"},{"text":": ","type":"text"},{"type":"codeVoice","code":"[EffectDescriptor]"},{"type":"text","text":" — optional effects on select"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Descriptor objects:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"PredicateDescriptor"},{"text":": ","type":"text"},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"EffectDescriptor"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ id: String, parameters: { String: String } }"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity\/actor\/global objects:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"EntityDescriptor","type":"codeVoice"},{"text":": ","type":"text"},{"code":"{ name?: String, nameKey?: String, tags?: [String], assetKey?: String }","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ActorDescriptor"},{"type":"text","text":": "},{"code":"{ id: String, ref?: String, name?: String, nameKey?: String, tags?: [String], faction?: String }","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"GlobalAction"},{"type":"text","text":": "},{"type":"codeVoice","code":"{ title?: String, titleKey?: String, destination: String }"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Minimal example:"}],"type":"paragraph"},{"code":["{","  \"metadata\": { \"id\": \"demo\", \"title\": \"Demo\", \"version\": 1 },","  \"start\": \"a\",","  \"nodes\": {","    \"a\": {","      \"id\": \"a\",","      \"text\": { \"file\": \"t.md\", \"section\": \"a\" },","      \"tags\": [],","      \"actors\": [ { \"id\": \"g1\", \"ref\": \"goblin\" } ],","      \"onEnter\": [],","      \"choices\": [","        { \"id\": \"go\", \"title\": \"Continue\", \"destination\": \"b\", \"predicates\": [], \"effects\": [] }","      ]","    },","    \"b\": {","      \"id\": \"b\",","      \"text\": { \"file\": \"t.md\", \"section\": \"b\" },","      \"tags\": [],","      \"onEnter\": [],","      \"choices\": [],","      \"terminal\": true","    }","  },","  \"entities\": {","    \"goblin\": { \"name\": \"Goblin\", \"tags\": [\"hostile\"] }","  },","  \"globals\": {","    \"globalActions\": {","      \"playerDied\": { \"title\": \"You Died\", \"destination\": \"b\" }","    }","  }","}"],"syntax":"json","type":"codeListing"},{"anchor":"Markdown-text-files","level":3,"text":"Markdown text files","type":"heading"},{"inlineContent":[{"text":"Markdown files can contain multiple sections, delimited by a line of the form:","type":"text"}],"type":"paragraph"},{"code":["=== node: <section-id> ==="],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"Example (","type":"text"},{"type":"codeVoice","code":"texts\/t.md"},{"text":"):","type":"text"}],"type":"paragraph"},{"code":["=== node: a ===","You wake up to the sound of rain.","","=== node: b ===","You step into the hallway."],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Encoding is assumed to be UTF‑8."}],"type":"paragraph"},{"anchor":"Compiled-Bundle-storybundle","level":2,"text":"Compiled Bundle (.storybundle)","type":"heading"},{"inlineContent":[{"text":"The compiler produces a directory‑based bundle that mirrors the source in a normalized form:","type":"text"}],"type":"paragraph"},{"code":["My.storybundle\/","  manifest.json","  graph.json","  texts\/","    *.md"],"syntax":null,"type":"codeListing"},{"anchor":"graphjson","level":3,"text":"graph.json","type":"heading"},{"inlineContent":[{"code":"graph.json","type":"codeVoice"},{"type":"text","text":" is the normalized story graph used by the runtime. It has the same JSON shape as "},{"code":"story.json","type":"codeVoice"},{"type":"text","text":" but is produced by the compiler (e.g., after transforms). In the initial implementation, it is a copy of "},{"code":"story.json","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"manifestjson","level":3,"text":"manifest.json","type":"heading"},{"inlineContent":[{"text":"The manifest records basic metadata about the compiled bundle:","type":"text"}],"type":"paragraph"},{"code":["{","  \"schemaVersion\": 1,","  \"storyID\": \"demo\",","  \"title\": \"Demo\",","  \"version\": 1,","  \"graphHashSHA256\": \"<hex sha256 of graph.json>\",","  \"builtAt\": 1737072000","}"],"syntax":"json","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"code":"schemaVersion","type":"codeVoice"},{"text":": Monotonically increasing schema identifier.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"storyID","type":"codeVoice"},{"text":", ","type":"text"},{"code":"title","type":"codeVoice"},{"text":", ","type":"text"},{"code":"version","type":"codeVoice"},{"text":": Copied from story metadata.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"graphHashSHA256"},{"type":"text","text":": Hex‑encoded SHA‑256 of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" for integrity."}]}]},{"content":[{"inlineContent":[{"code":"builtAt","type":"codeVoice"},{"text":": Build timestamp as encoded by ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":" (numeric seconds by default).","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","anchor":"texts","text":"texts\/","level":3},{"inlineContent":[{"type":"text","text":"Markdown files are copied from the source "},{"type":"codeVoice","code":"texts\/"},{"type":"text","text":" directory without modification. They are resolved at runtime by the text providers."}],"type":"paragraph"},{"type":"heading","anchor":"Graph-Exports-CLI","text":"Graph Exports (CLI)","level":2},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"storykit graph"},{"type":"text","text":" command can export edges in several formats (written to stdout by default):"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"text"},{"type":"text","text":": One line per edge — "},{"type":"codeVoice","code":"from -> to"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"dot","type":"codeVoice"},{"text":": GraphViz DOT — declares nodes and edges, suitable for visualization.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"json"},{"text":": Array of edges — ","type":"text"},{"type":"codeVoice","code":"[ { \"from\": String, \"to\": String } ]"},{"text":".","type":"text"}]}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/storykit"}}}