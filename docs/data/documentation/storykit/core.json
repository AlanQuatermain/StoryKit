{"sections":[],"metadata":{"role":"article","modules":[{"name":"StoryKit"}],"title":"Core","roleHeading":"Article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/core"]}],"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Core"},"abstract":[{"type":"text","text":"Understand StoryKit’s core data model and identifiers."}],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The Core module defines the schema for stories and the foundational types used across the package. It is deliberately small and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" to support safe use with Swift Concurrency.","type":"text"}]},{"level":3,"type":"heading","text":"Identifiers","anchor":"Identifiers"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/NodeID"},{"type":"text","text":": Strongly‑typed identifier for nodes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/ChoiceID"},{"type":"text","text":": Strongly‑typed identifier for choices."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Both wrap ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" and conform to ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},{"level":3,"type":"heading","text":"Content References","anchor":"Content-References"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/TextRef"},{"type":"text","text":": Points to the prose for a node via "},{"type":"codeVoice","code":"file"},{"type":"text","text":" (Markdown filename) and "},{"type":"codeVoice","code":"section"},{"type":"text","text":" (a labeled region within the file)."}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Story Graph","anchor":"Story-Graph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/Choice"},{"type":"text","text":": A labeled edge from one node to another with optional predicates and effects."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/Node"},{"type":"text","text":": A story node with text reference, optional tags, on‑enter effects, and a list of choices."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/Story"},{"type":"text","text":": Aggregates metadata, the "},{"type":"codeVoice","code":"start"},{"type":"text","text":" node, and the "},{"type":"codeVoice","code":"nodes"},{"type":"text","text":" map."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/Story"},{"text":" encodes\/decodes its ","type":"text"},{"type":"codeVoice","code":"nodes"},{"text":" as a string‑keyed dictionary for authoring convenience while presenting a ","type":"text"},{"type":"codeVoice","code":"[NodeID: Node]"},{"text":" API within Swift.","type":"text"}]},{"level":3,"type":"heading","text":"Extensibility Descriptors","anchor":"Extensibility-Descriptors"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/PredicateDescriptor"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Core\/EffectDescriptor"},{"type":"text","text":": Data‑only descriptors with an "},{"type":"codeVoice","code":"id"},{"type":"text","text":" and string parameters, used to bind to runtime logic registered by the host app."}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Registries and State","anchor":"Registries-and-State"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/StoryState"},{"type":"text","text":": Protocol for app‑defined, "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" story state. Must include a "},{"type":"codeVoice","code":"currentNode"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/PredicateRegistry"},{"type":"text","text":": Maps predicate ids to "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" evaluation closures."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/EffectRegistry"},{"type":"text","text":": Maps effect ids to "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" mutation closures."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/ActionRegistry"},{"type":"text","text":": Maps action ids to "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" closures that can throw and return an "},{"type":"codeVoice","code":"Core\/ActionOutcome"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Core\/ActionOutcome"},{"type":"text","text":": Indicates action completion or requests host interaction."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"All registries are value types and store ","type":"text"},{"type":"codeVoice","code":"@Sendable"},{"text":" closures to be safe across concurrency domains.","type":"text"}]}]}],"references":{"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","type":"topic","kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/storykit"}}}