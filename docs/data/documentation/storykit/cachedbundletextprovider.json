{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/cachedbundletextprovider"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider"},"relationshipsSections":[{"identifiers":["doc:\/\/StoryKit\/s8SendableP","doc:\/\/StoryKit\/s16SendableMetatypeP","doc:\/\/StoryKit\/ScA"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"metadata":{"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CachedBundleTextProvider","kind":"identifier"}],"symbolKind":"class","title":"CachedBundleTextProvider","navigatorTitle":[{"text":"CachedBundleTextProvider","kind":"identifier"}],"roleHeading":"Class","modules":[{"name":"StoryKit"}],"role":"symbol","externalID":"s:8StoryKit24CachedBundleTextProviderC"},"abstract":[{"text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedBundleTextProvider"}],"platforms":["macOS"],"languages":["swift"]}]},{"mentions":["doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO"],"kind":"mentions"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/init(bundle:maxBytes:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/handleMemoryPressure()","doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/purgeAll()","doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/text(for:)"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/Actor-Implementations"]}],"kind":"symbol","references":{"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider":{"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CachedBundleTextProvider","kind":"identifier"}],"url":"\/documentation\/storykit\/cachedbundletextprovider","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge."}],"navigatorTitle":[{"text":"CachedBundleTextProvider","kind":"identifier"}],"title":"CachedBundleTextProvider","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/handleMemoryPressure()":{"title":"handleMemoryPressure()","url":"\/documentation\/storykit\/cachedbundletextprovider\/handlememorypressure()","type":"topic","abstract":[{"type":"text","text":"Responds to system memory pressure by purging the cache."}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/handleMemoryPressure()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleMemoryPressure","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/init(bundle:maxBytes:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bundle"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StoryBundleLayout","preciseIdentifier":"s:8StoryKit0A12BundleLayoutV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxBytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a cached provider for a compiled bundle.","type":"text"}],"type":"topic","title":"init(bundle:maxBytes:)","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/init(bundle:maxBytes:)","role":"symbol","url":"\/documentation\/storykit\/cachedbundletextprovider\/init(bundle:maxbytes:)"},"doc://StoryKit/documentation/StoryKit/ContentIO":{"type":"topic","title":"Content I\/O","role":"article","kind":"article","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO","abstract":[{"type":"text","text":"Load, compile, and serve story content and text."}],"url":"\/documentation\/storykit\/contentio"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/Actor-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"Actor Implementations","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/Actor-Implementations","role":"collectionGroup","url":"\/documentation\/storykit\/cachedbundletextprovider\/actor-implementations"},"doc://StoryKit/documentation/StoryKit":{"type":"topic","kind":"symbol","role":"collection","title":"StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/text(for:)":{"title":"text(for:)","url":"\/documentation\/storykit\/cachedbundletextprovider\/text(for:)","type":"topic","abstract":[{"type":"text","text":"Returns text for a reference, loading and caching the file if necessary."}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/text(for:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"text","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TextRef","preciseIdentifier":"s:8StoryKit7TextRefV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://StoryKit/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","identifier":"doc:\/\/StoryKit\/s16SendableMetatypeP","type":"unresolvable"},"doc://StoryKit/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/StoryKit\/ScA","type":"unresolvable"},"doc://StoryKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/StoryKit\/s8SendableP","type":"unresolvable"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/purgeAll()":{"url":"\/documentation\/storykit\/cachedbundletextprovider\/purgeall()","title":"purgeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"purgeAll"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/purgeAll()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Clears all cached content."}],"type":"topic"}}}