{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CachedBundleTextProvider","kind":"identifier"}]}]},{"kind":"mentions","mentions":["doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO"]}],"variants":[{"paths":["\/documentation\/storykit\/cachedbundletextprovider"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider"},"kind":"symbol","topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/init(bundle:maxBytes:)"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/handleMemoryPressure()","doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/purgeAll()","doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/text(for:)"]},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/Actor-Implementations"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/StoryKit\/s8SendableP","doc:\/\/StoryKit\/s16SendableMetatypeP","doc:\/\/StoryKit\/ScA"]}],"metadata":{"externalID":"s:8StoryKit24CachedBundleTextProviderC","roleHeading":"Class","role":"symbol","symbolKind":"class","title":"CachedBundleTextProvider","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedBundleTextProvider"}],"navigatorTitle":[{"kind":"identifier","text":"CachedBundleTextProvider"}],"modules":[{"name":"StoryKit"}]},"sections":[],"abstract":[{"type":"text","text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge."}],"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"references":{"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/Actor-Implementations":{"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/Actor-Implementations","role":"collectionGroup","title":"Actor Implementations","kind":"article","url":"\/documentation\/storykit\/cachedbundletextprovider\/actor-implementations","abstract":[]},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/purgeAll()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"purgeAll","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/purgeAll()","abstract":[{"text":"Clears all cached content.","type":"text"}],"title":"purgeAll()","url":"\/documentation\/storykit\/cachedbundletextprovider\/purgeall()","kind":"symbol","type":"topic"},"doc://StoryKit/ScA":{"identifier":"doc:\/\/StoryKit\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://StoryKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/StoryKit\/s8SendableP","title":"Swift.Sendable"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/handleMemoryPressure()":{"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/handleMemoryPressure()","role":"symbol","title":"handleMemoryPressure()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleMemoryPressure"},{"kind":"text","text":"()"}],"url":"\/documentation\/storykit\/cachedbundletextprovider\/handlememorypressure()","abstract":[{"type":"text","text":"Responds to system memory pressure by purging the cache."}]},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/text(for:)":{"title":"text(for:)","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/text(for:)","url":"\/documentation\/storykit\/cachedbundletextprovider\/text(for:)","abstract":[{"text":"Returns text for a reference, loading and caching the file if necessary.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"text"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8StoryKit7TextRefV","text":"TextRef"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider/init(bundle:maxBytes:)":{"url":"\/documentation\/storykit\/cachedbundletextprovider\/init(bundle:maxbytes:)","title":"init(bundle:maxBytes:)","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider\/init(bundle:maxBytes:)","abstract":[{"type":"text","text":"Creates a cached provider for a compiled bundle."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bundle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8StoryKit0A12BundleLayoutV","text":"StoryBundleLayout"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxBytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://StoryKit/documentation/StoryKit/ContentIO":{"kind":"article","title":"Content I\/O","abstract":[{"text":"Load, compile, and serve story content and text.","type":"text"}],"type":"topic","role":"article","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO","url":"\/documentation\/storykit\/contentio"},"doc://StoryKit/s16SendableMetatypeP":{"identifier":"doc:\/\/StoryKit\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","url":"\/documentation\/storykit","role":"collection","type":"topic","kind":"symbol","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider":{"title":"CachedBundleTextProvider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider","url":"\/documentation\/storykit\/cachedbundletextprovider","abstract":[{"text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge.","type":"text"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedBundleTextProvider"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CachedBundleTextProvider"}]}}}