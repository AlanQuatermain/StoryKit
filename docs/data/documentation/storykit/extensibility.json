{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime."}],"type":"paragraph"},{"anchor":"Registries","text":"Registries","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry"},{"text":": Register visibility\/eligibility checks. Signature: ","type":"text"},{"type":"codeVoice","code":"@Sendable (State, [String: String]) -> Bool"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry"},{"text":": Register state mutations. Signature: ","type":"text"},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) -> Void"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry"},{"text":": Register richer interactions that can throw and return an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome"},{"text":". Signature: ","type":"text"},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Parameters are "},{"type":"codeVoice","code":"String"},{"type":"text","text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention."}],"type":"paragraph"},{"anchor":"State","text":"State","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Define a type conforming to "},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","isActive":true},{"type":"text","text":" to represent your game’s state. Keep it "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" to work well with autosave and concurrency."}],"type":"paragraph"},{"anchor":"Determinism","text":"Determinism","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values."}],"type":"paragraph"},{"anchor":"Encounters-and-Global-Actions","text":"Encounters and Global Actions","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Declare who\/what is present using data‑only fields in content: top‑level ","type":"text"},{"type":"codeVoice","code":"entities"},{"text":" and per‑node ","type":"text"},{"type":"codeVoice","code":"actors"},{"text":". These carry identifiers, labels, and tags — not mechanics.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState"},{"text":". The engine can remain on the same node between turns.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a ","type":"text"},{"type":"codeVoice","code":"globals.globalActions"},{"text":" entry in content and call ","type":"text"},{"type":"codeVoice","code":"StoryEngine.performGlobalAction(id:)"},{"text":" to jump to its destination (on‑enter effects and autosave apply).","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility"},"metadata":{"role":"article","title":"Extensibility","modules":[{"name":"StoryKit"}],"roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"abstract":[{"text":"Customize logic with predicates, effects, and actions.","type":"text"}],"kind":"article","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/extensibility"]}],"references":{"doc://StoryKit/documentation/StoryKit/ActionRegistry":{"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionRegistry","kind":"identifier"}],"title":"ActionRegistry","url":"\/documentation\/storykit\/actionregistry","navigatorTitle":[{"text":"ActionRegistry","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Registry that maps action ids to action closures."}]},"doc://StoryKit/documentation/StoryKit":{"kind":"symbol","role":"collection","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","url":"\/documentation\/storykit","abstract":[{"type":"text","text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling."}],"type":"topic","title":"StoryKit"},"doc://StoryKit/documentation/StoryKit/StoryState":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","type":"topic","url":"\/documentation\/storykit\/storystate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryState","kind":"identifier"}],"abstract":[{"type":"text","text":"App-defined, codable story state used by the engine."}],"title":"StoryState","navigatorTitle":[{"text":"StoryState","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://StoryKit/documentation/StoryKit/PredicateRegistry":{"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PredicateRegistry"}],"title":"PredicateRegistry","url":"\/documentation\/storykit\/predicateregistry","navigatorTitle":[{"text":"PredicateRegistry","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Registry that maps predicate ids to evaluation closures.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/EffectRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","type":"topic","url":"\/documentation\/storykit\/effectregistry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectRegistry"}],"abstract":[{"text":"Registry that maps effect ids to mutation closures.","type":"text"}],"title":"EffectRegistry","navigatorTitle":[{"kind":"identifier","text":"EffectRegistry"}],"kind":"symbol","role":"symbol"},"doc://StoryKit/documentation/StoryKit/ActionOutcome":{"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionOutcome","kind":"identifier"}],"title":"ActionOutcome","url":"\/documentation\/storykit\/actionoutcome","navigatorTitle":[{"text":"ActionOutcome","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Outcome of a performed action."}]}}}