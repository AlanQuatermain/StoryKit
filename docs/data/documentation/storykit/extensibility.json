{"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"metadata":{"title":"Extensibility","role":"article","modules":[{"name":"StoryKit"}],"roleHeading":"Article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime."}],"type":"paragraph"},{"text":"Registries","anchor":"Registries","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry"},{"type":"text","text":": Register visibility\/eligibility checks. Signature: "},{"type":"codeVoice","code":"@Sendable (State, [String: String]) -> Bool"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry"},{"type":"text","text":": Register state mutations. Signature: "},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) -> Void"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","type":"reference"},{"text":": Register richer interactions that can throw and return an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","type":"reference"},{"text":". Signature: ","type":"text"},{"code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Parameters are ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention."}]},{"text":"State","anchor":"State","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a type conforming to "},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","isActive":true},{"type":"text","text":" to represent your game’s state. Keep it "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" to work well with autosave and concurrency."}]},{"text":"Determinism","anchor":"Determinism","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values."}]},{"text":"Encounters and Global Actions","anchor":"Encounters-and-Global-Actions","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Declare who\/what is present using data‑only fields in content: top‑level "},{"type":"codeVoice","code":"entities"},{"type":"text","text":" and per‑node "},{"type":"codeVoice","code":"actors"},{"type":"text","text":". These carry identifiers, labels, and tags — not mechanics."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState"},{"type":"text","text":". The engine can remain on the same node between turns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a "},{"type":"codeVoice","code":"globals.globalActions"},{"type":"text","text":" entry in content and call "},{"type":"codeVoice","code":"StoryEngine.performGlobalAction(id:)"},{"type":"text","text":" to jump to its destination (on‑enter effects and autosave apply)."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/extensibility"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Customize logic with predicates, effects, and actions.","type":"text"}],"sections":[],"references":{"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","url":"\/documentation\/storykit","role":"collection","type":"topic","kind":"symbol","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/ActionRegistry":{"title":"ActionRegistry","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","url":"\/documentation\/storykit\/actionregistry","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ActionRegistry"}],"abstract":[{"text":"Registry that maps action ids to action closures.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ActionRegistry"}]},"doc://StoryKit/documentation/StoryKit/StoryState":{"title":"StoryState","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","url":"\/documentation\/storykit\/storystate","abstract":[{"type":"text","text":"App-defined, codable story state used by the engine."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryState","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"StoryState","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/EffectRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","title":"EffectRegistry","abstract":[{"type":"text","text":"Registry that maps effect ids to mutation closures."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EffectRegistry","kind":"identifier"}],"url":"\/documentation\/storykit\/effectregistry","navigatorTitle":[{"kind":"identifier","text":"EffectRegistry"}],"type":"topic"},"doc://StoryKit/documentation/StoryKit/ActionOutcome":{"title":"ActionOutcome","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","url":"\/documentation\/storykit\/actionoutcome","abstract":[{"type":"text","text":"Outcome of a performed action."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionOutcome","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"ActionOutcome","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/PredicateRegistry":{"role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry","type":"topic","title":"PredicateRegistry","url":"\/documentation\/storykit\/predicateregistry","kind":"symbol","navigatorTitle":[{"text":"PredicateRegistry","kind":"identifier"}],"abstract":[{"text":"Registry that maps predicate ids to evaluation closures.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PredicateRegistry","kind":"identifier"}]}}}