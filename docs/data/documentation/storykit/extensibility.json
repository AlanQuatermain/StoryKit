{"abstract":[{"text":"Customize logic with predicates, effects, and actions.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime."}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Registries","text":"Registries"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry","isActive":true},{"type":"text","text":": Register visibility\/eligibility checks. Signature: "},{"code":"@Sendable (State, [String: String]) -> Bool","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","isActive":true,"type":"reference"},{"type":"text","text":": Register state mutations. Signature: "},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) -> Void"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","type":"reference"},{"text":": Register richer interactions that can throw and return an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","type":"reference"},{"text":". Signature: ","type":"text"},{"code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters are "},{"type":"codeVoice","code":"String"},{"type":"text","text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention."}]},{"type":"heading","text":"State","anchor":"State","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a type conforming to "},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","isActive":true},{"type":"text","text":" to represent your game’s state. Keep it "},{"type":"codeVoice","code":"Codable"},{"text":" and ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" to work well with autosave and concurrency.","type":"text"}]},{"text":"Determinism","anchor":"Determinism","type":"heading","level":2},{"inlineContent":[{"text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values.","type":"text"}],"type":"paragraph"},{"text":"Encounters and Global Actions","level":2,"anchor":"Encounters-and-Global-Actions","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Declare who\/what is present using data‑only fields in content: top‑level ","type":"text"},{"code":"entities","type":"codeVoice"},{"text":" and per‑node ","type":"text"},{"code":"actors","type":"codeVoice"},{"text":". These carry identifiers, labels, and tags — not mechanics.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState"},{"type":"text","text":". The engine can remain on the same node between turns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a ","type":"text"},{"code":"globals.globalActions","type":"codeVoice"},{"text":" entry in content and call ","type":"text"},{"type":"codeVoice","code":"StoryEngine.performGlobalAction(id:)"},{"text":" to jump to its destination (on‑enter effects and autosave apply).","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"kind":"article","variants":[{"paths":["\/documentation\/storykit\/extensibility"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"StoryKit"}],"title":"Extensibility"},"references":{"doc://StoryKit/documentation/StoryKit/ActionRegistry":{"url":"\/documentation\/storykit\/actionregistry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionRegistry","kind":"identifier"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","type":"topic","kind":"symbol","abstract":[{"text":"Registry that maps action ids to action closures.","type":"text"}],"title":"ActionRegistry","role":"symbol","navigatorTitle":[{"text":"ActionRegistry","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryState":{"abstract":[{"type":"text","text":"App-defined, codable story state used by the engine."}],"kind":"symbol","title":"StoryState","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryState"}],"url":"\/documentation\/storykit\/storystate","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","navigatorTitle":[{"kind":"identifier","text":"StoryState"}]},"doc://StoryKit/documentation/StoryKit":{"url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling."}],"title":"StoryKit","role":"collection"},"doc://StoryKit/documentation/StoryKit/EffectRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","title":"EffectRegistry","navigatorTitle":[{"text":"EffectRegistry","kind":"identifier"}],"abstract":[{"type":"text","text":"Registry that maps effect ids to mutation closures."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EffectRegistry","kind":"identifier"}],"url":"\/documentation\/storykit\/effectregistry"},"doc://StoryKit/documentation/StoryKit/ActionOutcome":{"title":"ActionOutcome","url":"\/documentation\/storykit\/actionoutcome","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionOutcome"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionOutcome"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","abstract":[{"text":"Outcome of a performed action.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/PredicateRegistry":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PredicateRegistry"}],"abstract":[{"type":"text","text":"Registry that maps predicate ids to evaluation closures."}],"navigatorTitle":[{"kind":"identifier","text":"PredicateRegistry"}],"role":"symbol","title":"PredicateRegistry","url":"\/documentation\/storykit\/predicateregistry","type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry"}}}