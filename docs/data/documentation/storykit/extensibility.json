{"metadata":{"modules":[{"name":"StoryKit"}],"roleHeading":"Article","title":"Extensibility","role":"article"},"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"sections":[],"abstract":[{"type":"text","text":"Customize logic with predicates, effects, and actions."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/extensibility"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime.","type":"text"}]},{"type":"heading","level":2,"text":"Registries","anchor":"Registries"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry","isActive":true,"type":"reference"},{"text":": Register visibility\/eligibility checks. Signature: ","type":"text"},{"type":"codeVoice","code":"@Sendable (State, [String: String]) -> Bool"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry"},{"text":": Register state mutations. Signature: ","type":"text"},{"code":"@Sendable (inout State, [String: String]) -> Void","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry"},{"type":"text","text":": Register richer interactions that can throw and return an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome"},{"type":"text","text":". Signature: "},{"code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Parameters are "},{"type":"codeVoice","code":"String"},{"type":"text","text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention."}],"type":"paragraph"},{"level":2,"text":"State","anchor":"State","type":"heading"},{"inlineContent":[{"text":"Define a type conforming to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState"},{"type":"text","text":" to represent your game’s state. Keep it "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"text":" to work well with autosave and concurrency.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Determinism","anchor":"Determinism"},{"inlineContent":[{"type":"text","text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values."}],"type":"paragraph"},{"text":"Encounters and Global Actions","type":"heading","level":2,"anchor":"Encounters-and-Global-Actions"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare who\/what is present using data‑only fields in content: top‑level "},{"code":"entities","type":"codeVoice"},{"type":"text","text":" and per‑node "},{"code":"actors","type":"codeVoice"},{"type":"text","text":". These carry identifiers, labels, and tags — not mechanics."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your "},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","isActive":true,"type":"reference"},{"type":"text","text":". The engine can remain on the same node between turns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a "},{"code":"globals.globalActions","type":"codeVoice"},{"type":"text","text":" entry in content and call "},{"code":"StoryEngine.performGlobalAction(id:)","type":"codeVoice"},{"type":"text","text":" to jump to its destination (on‑enter effects and autosave apply)."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"article","identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility","interfaceLanguage":"swift"},"references":{"doc://StoryKit/documentation/StoryKit/EffectRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","title":"EffectRegistry","navigatorTitle":[{"kind":"identifier","text":"EffectRegistry"}],"type":"topic","abstract":[{"text":"Registry that maps effect ids to mutation closures.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EffectRegistry","kind":"identifier"}],"role":"symbol","url":"\/documentation\/storykit\/effectregistry","kind":"symbol"},"doc://StoryKit/documentation/StoryKit/PredicateRegistry":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PredicateRegistry","kind":"identifier"}],"title":"PredicateRegistry","abstract":[{"type":"text","text":"Registry that maps predicate ids to evaluation closures."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PredicateRegistry","kind":"identifier"}],"url":"\/documentation\/storykit\/predicateregistry","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry"},"doc://StoryKit/documentation/StoryKit/StoryState":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryState","kind":"identifier"}],"abstract":[{"type":"text","text":"App-defined, codable story state used by the engine."}],"role":"symbol","kind":"symbol","url":"\/documentation\/storykit\/storystate","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","type":"topic","title":"StoryState","navigatorTitle":[{"text":"StoryState","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit":{"type":"topic","kind":"symbol","role":"collection","title":"StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit"},"doc://StoryKit/documentation/StoryKit/ActionOutcome":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionOutcome","kind":"identifier"}],"abstract":[{"text":"Outcome of a performed action.","type":"text"}],"type":"topic","title":"ActionOutcome","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ActionOutcome"}],"url":"\/documentation\/storykit\/actionoutcome"},"doc://StoryKit/documentation/StoryKit/ActionRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","kind":"symbol","navigatorTitle":[{"text":"ActionRegistry","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Registry that maps action ids to action closures."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionRegistry","kind":"identifier"}],"role":"symbol","url":"\/documentation\/storykit\/actionregistry","title":"ActionRegistry"}}}