{"sections":[],"identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility","interfaceLanguage":"swift"},"kind":"article","hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storykit\/extensibility"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"article","roleHeading":"Article","title":"Extensibility","modules":[{"name":"StoryKit"}]},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime."}],"type":"paragraph"},{"level":2,"anchor":"Registries","text":"Registries","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry"},{"type":"text","text":": Register visibility\/eligibility checks. Signature: "},{"type":"codeVoice","code":"@Sendable (State, [String: String]) -> Bool"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","type":"reference"},{"text":": Register state mutations. Signature: ","type":"text"},{"code":"@Sendable (inout State, [String: String]) -> Void","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","isActive":true},{"type":"text","text":": Register richer interactions that can throw and return an "},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","isActive":true},{"type":"text","text":". Signature: "},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Parameters are ","type":"text"},{"code":"String","type":"codeVoice"},{"text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"State","text":"State"},{"inlineContent":[{"type":"text","text":"Define a type conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState"},{"type":"text","text":" to represent your game’s state. Keep it "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" to work well with autosave and concurrency."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Determinism","text":"Determinism"},{"inlineContent":[{"text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Encounters-and-Global-Actions","text":"Encounters and Global Actions"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declare who\/what is present using data‑only fields in content: top‑level "},{"code":"entities","type":"codeVoice"},{"type":"text","text":" and per‑node "},{"code":"actors","type":"codeVoice"},{"type":"text","text":". These carry identifiers, labels, and tags — not mechanics."}]}]},{"content":[{"inlineContent":[{"text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","type":"reference","isActive":true},{"text":". The engine can remain on the same node between turns.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a ","type":"text"},{"code":"globals.globalActions","type":"codeVoice"},{"text":" entry in content and call ","type":"text"},{"code":"StoryEngine.performGlobalAction(id:)","type":"codeVoice"},{"text":" to jump to its destination (on‑enter effects and autosave apply).","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"text":"Customize logic with predicates, effects, and actions.","type":"text"}],"references":{"doc://StoryKit/documentation/StoryKit/EffectRegistry":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EffectRegistry","kind":"identifier"}],"role":"symbol","url":"\/documentation\/storykit\/effectregistry","navigatorTitle":[{"text":"EffectRegistry","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/EffectRegistry","abstract":[{"type":"text","text":"Registry that maps effect ids to mutation closures."}],"kind":"symbol","title":"EffectRegistry"},"doc://StoryKit/documentation/StoryKit/StoryState":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryState","kind":"identifier"}],"type":"topic","title":"StoryState","abstract":[{"type":"text","text":"App-defined, codable story state used by the engine."}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryState","navigatorTitle":[{"text":"StoryState","kind":"identifier"}],"url":"\/documentation\/storykit\/storystate"},"doc://StoryKit/documentation/StoryKit":{"type":"topic","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"title":"StoryKit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","url":"\/documentation\/storykit","role":"collection","kind":"symbol"},"doc://StoryKit/documentation/StoryKit/ActionOutcome":{"url":"\/documentation\/storykit\/actionoutcome","navigatorTitle":[{"kind":"identifier","text":"ActionOutcome"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionOutcome","role":"symbol","abstract":[{"text":"Outcome of a performed action.","type":"text"}],"title":"ActionOutcome","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionOutcome"}]},"doc://StoryKit/documentation/StoryKit/ActionRegistry":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/ActionRegistry","kind":"symbol","type":"topic","title":"ActionRegistry","abstract":[{"type":"text","text":"Registry that maps action ids to action closures."}],"url":"\/documentation\/storykit\/actionregistry","navigatorTitle":[{"kind":"identifier","text":"ActionRegistry"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionRegistry"}]},"doc://StoryKit/documentation/StoryKit/PredicateRegistry":{"role":"symbol","kind":"symbol","title":"PredicateRegistry","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PredicateRegistry"}],"url":"\/documentation\/storykit\/predicateregistry","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/PredicateRegistry","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PredicateRegistry"}],"abstract":[{"type":"text","text":"Registry that maps predicate ids to evaluation closures."}]}}}