{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"StoryKit separates data from behavior. Authors reference symbolic ids in content; apps register concrete logic at runtime."}]},{"anchor":"Registries","type":"heading","text":"Registries","level":2},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"PredicateRegistry"},{"type":"text","text":": Register visibility\/eligibility checks. Signature: "},{"type":"codeVoice","code":"@Sendable (State, [String: String]) -> Bool"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"EffectRegistry"},{"type":"text","text":": Register state mutations. Signature: "},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) -> Void"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ActionRegistry"},{"type":"text","text":": Register richer interactions that can throw and return an "},{"type":"codeVoice","code":"ActionOutcome"},{"type":"text","text":". Signature: "},{"type":"codeVoice","code":"@Sendable (inout State, [String: String]) throws -> ActionOutcome"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters are "},{"type":"codeVoice","code":"String"},{"type":"text","text":"‑keyed for portability; you can adopt your own encoding\/decoding and look up values by convention."}]},{"anchor":"State","type":"heading","text":"State","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a type conforming to "},{"type":"codeVoice","code":"StoryState"},{"type":"text","text":" to represent your game’s state. Keep it "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" to work well with autosave and concurrency."}]},{"anchor":"Determinism","type":"heading","text":"Determinism","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For deterministic tests, avoid randomness in registry closures or route any randomness through state so tests can substitute deterministic values."}]},{"anchor":"Encounters-and-Global-Actions","type":"heading","text":"Encounters and Global Actions","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Declare who\/what is present using data‑only fields in content: top‑level "},{"type":"codeVoice","code":"entities"},{"type":"text","text":" and per‑node "},{"type":"codeVoice","code":"actors"},{"type":"text","text":". These carry identifiers, labels, and tags — not mechanics."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Drive multi‑step encounters entirely in your client using registered actions that mutate your "},{"type":"codeVoice","code":"StoryState"},{"type":"text","text":". The engine can remain on the same node between turns."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When an out‑of‑band outcome should transition regardless of the current node (e.g., “player died”), declare a "},{"type":"codeVoice","code":"globals.globalActions"},{"type":"text","text":" entry in content and call "},{"type":"codeVoice","code":"StoryEngine.performGlobalAction(id:)"},{"type":"text","text":" to jump to its destination (on‑enter effects and autosave apply)."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Customize logic with predicates, effects, and actions."}],"kind":"article","hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"StoryKit"}],"role":"article","title":"Extensibility"},"variants":[{"paths":["\/documentation\/storykit\/extensibility"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/StoryKit\/documentation\/StoryKit\/Extensibility","interfaceLanguage":"swift"},"references":{"doc://StoryKit/documentation/StoryKit":{"role":"collection","kind":"symbol","title":"StoryKit","type":"topic","url":"\/documentation\/storykit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}]}}}