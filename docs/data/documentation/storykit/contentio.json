{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","abstract":[{"type":"text","text":"Load, compile, and serve story content and text."}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"StoryKit handles authoring and runtime content formats, text parsing, and compiled bundle manifests."}]},{"text":"Layouts and Loaders","type":"heading","anchor":"Layouts-and-Loaders","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout"},{"type":"text","text":": Describes a source folder with "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":" and "},{"type":"codeVoice","code":"texts\/"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","isActive":true},{"text":": Describes a compiled ","type":"text"},{"type":"codeVoice","code":".storybundle"},{"text":" directory.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader"},{"text":": Loads a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story"},{"text":" from a ","type":"text"},{"code":"story.json","type":"codeVoice"},{"text":" file.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader","type":"reference"},{"text":": Loads a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","type":"reference"},{"type":"text","text":" from a bundle’s "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":"."}]}]}]},{"type":"heading","text":"Compiler and Manifest","level":2,"anchor":"Compiler-and-Manifest"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","type":"reference"},{"text":": Compiles a source folder into a bundle.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest"},{"type":"text","text":": Records schema version, story metadata, build time, and the SHA‑256 hash of "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"heading","text":"Markdown Text","level":2,"anchor":"Markdown-Text"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","type":"reference","isActive":true},{"type":"text","text":": Splits Markdown files into named sections using lines of the form "},{"code":"=== node: <section-id> ===","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"heading","text":"Text Providers","level":3,"anchor":"Text-Providers"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","isActive":true},{"type":"text","text":": Minimal providers that parse a file on each request."}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider","isActive":true},{"text":": Actor‑based providers with LRU caches and memory‑pressure purging.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both cached providers accept a "},{"type":"codeVoice","code":"maxBytes"},{"type":"text","text":" budget and evict least‑recently‑used files when the cache exceeds this size. Memory pressure notifications trigger a full purge."}]},{"level":2,"type":"heading","text":"Errors","anchor":"Errors"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError","isActive":true,"type":"reference"},{"text":": Throws when a requested text section is missing.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/storykit\/contentio"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Article","role":"article","title":"Content I\/O","modules":[{"name":"StoryKit"}]},"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"references":{"doc://StoryKit/documentation/StoryKit/SourceTextProvider":{"title":"SourceTextProvider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceTextProvider"}],"navigatorTitle":[{"kind":"identifier","text":"SourceTextProvider"}],"role":"symbol","abstract":[{"type":"text","text":"A simple text provider that parses the source file each time."}],"url":"\/documentation\/storykit\/sourcetextprovider","type":"topic","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider"},"doc://StoryKit/documentation/StoryKit/StoryBundleManifest":{"type":"topic","abstract":[{"text":"Metadata describing a compiled story bundle.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryBundleManifest","kind":"identifier"}],"navigatorTitle":[{"text":"StoryBundleManifest","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/storykit\/storybundlemanifest","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest","title":"StoryBundleManifest"},"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/storykit"},"doc://StoryKit/documentation/StoryKit/Story":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Story"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","abstract":[{"type":"text","text":"A complete story graph plus metadata and a starting node."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Story"}],"title":"Story","type":"topic","url":"\/documentation\/storykit\/story"},"doc://StoryKit/documentation/StoryKit/TextSectionParser":{"url":"\/documentation\/storykit\/textsectionparser","title":"TextSectionParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextSectionParser","kind":"identifier"}],"abstract":[{"type":"text","text":"Parses Markdown files that contain multiple node sections separated by a special token."},{"type":"text","text":" "},{"type":"text","text":"Token format (at start of line):"},{"type":"text","text":" "},{"type":"text","text":"=== node: "},{"type":"text","text":" ==="},{"type":"text","text":" "},{"type":"text","text":"Splits Markdown into labeled sections using lines like "},{"type":"codeVoice","code":"=== node: <section-id> ==="},{"type":"text","text":"."}],"kind":"symbol","navigatorTitle":[{"text":"TextSectionParser","kind":"identifier"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","type":"topic","role":"symbol"},"doc://StoryKit/documentation/StoryKit/StoryLoader":{"navigatorTitle":[{"kind":"identifier","text":"StoryLoader"}],"url":"\/documentation\/storykit\/storyloader","title":"StoryLoader","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader","abstract":[{"type":"text","text":"Loads a Story from a "},{"type":"codeVoice","code":"story.json"},{"type":"text","text":" file."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryLoader"}]},"doc://StoryKit/documentation/StoryKit/StoryCompiler":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoryCompiler"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","abstract":[{"text":"Compiles a source folder into a directory-based bundle for runtime use.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"StoryCompiler","kind":"identifier"}],"title":"StoryCompiler","type":"topic","url":"\/documentation\/storykit\/storycompiler"},"doc://StoryKit/documentation/StoryKit/StoryIOError":{"navigatorTitle":[{"kind":"identifier","text":"StoryIOError"}],"url":"\/documentation\/storykit\/storyioerror","title":"StoryIOError","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError","abstract":[{"text":"Errors thrown while loading Markdown text or locating sections.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoryIOError"}]},"doc://StoryKit/documentation/StoryKit/StoryBundleLayout":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoryBundleLayout"}],"navigatorTitle":[{"text":"StoryBundleLayout","kind":"identifier"}],"url":"\/documentation\/storykit\/storybundlelayout","title":"StoryBundleLayout","abstract":[{"text":"Describes the on-disk layout for a compiled directory-based story bundle.","type":"text"}],"type":"topic"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider":{"title":"CachedBundleTextProvider","fragments":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CachedBundleTextProvider"}],"type":"topic","abstract":[{"text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CachedBundleTextProvider"}],"url":"\/documentation\/storykit\/cachedbundletextprovider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider"},"doc://StoryKit/documentation/StoryKit/StorySourceLayout":{"navigatorTitle":[{"text":"StorySourceLayout","kind":"identifier"}],"abstract":[{"type":"text","text":"Describes the on-disk layout for a human-authored story source."}],"title":"StorySourceLayout","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StorySourceLayout"}],"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout","kind":"symbol","url":"\/documentation\/storykit\/storysourcelayout"},"doc://StoryKit/documentation/StoryKit/StoryBundleLoader":{"title":"StoryBundleLoader","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryBundleLoader"}],"navigatorTitle":[{"kind":"identifier","text":"StoryBundleLoader"}],"role":"symbol","abstract":[{"type":"text","text":"Loads a Story from a compiled bundle’s "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" file."}],"url":"\/documentation\/storykit\/storybundleloader","kind":"symbol","type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader"},"doc://StoryKit/documentation/StoryKit/CachedSourceTextProvider":{"title":"CachedSourceTextProvider","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedSourceTextProvider"}],"navigatorTitle":[{"kind":"identifier","text":"CachedSourceTextProvider"}],"role":"symbol","abstract":[{"text":"An actor-based provider that caches parsed source files with LRU eviction and memory pressure purge.","type":"text"}],"url":"\/documentation\/storykit\/cachedsourcetextprovider","type":"topic","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider"},"doc://StoryKit/documentation/StoryKit/BundleTextProvider":{"kind":"symbol","url":"\/documentation\/storykit\/bundletextprovider","title":"BundleTextProvider","navigatorTitle":[{"kind":"identifier","text":"BundleTextProvider"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","abstract":[{"type":"text","text":"A simple text provider for compiled bundles that parses each request."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BundleTextProvider"}],"role":"symbol","type":"topic"}}}