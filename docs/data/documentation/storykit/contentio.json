{"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"metadata":{"modules":[{"name":"StoryKit"}],"role":"article","roleHeading":"Article","title":"Content I\/O"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"StoryKit handles authoring and runtime content formats, text parsing, and compiled bundle manifests."}],"type":"paragraph"},{"text":"Layouts and Loaders","type":"heading","level":2,"anchor":"Layouts-and-Loaders"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout","isActive":true,"type":"reference"},{"text":": Describes a source folder with ","type":"text"},{"type":"codeVoice","code":"story.json"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"texts\/"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","isActive":true,"type":"reference"},{"text":": Describes a compiled ","type":"text"},{"type":"codeVoice","code":".storybundle"},{"text":" directory.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader","isActive":true,"type":"reference"},{"text":": Loads a ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","isActive":true,"type":"reference"},{"text":" from a ","type":"text"},{"type":"codeVoice","code":"story.json"},{"text":" file.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader","isActive":true,"type":"reference"},{"text":": Loads a ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","isActive":true,"type":"reference"},{"text":" from a bundle’s ","type":"text"},{"type":"codeVoice","code":"graph.json"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"text":"Compiler and Manifest","type":"heading","level":2,"anchor":"Compiler-and-Manifest"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","isActive":true,"type":"reference"},{"text":": Compiles a source folder into a bundle.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest","isActive":true,"type":"reference"},{"text":": Records schema version, story metadata, build time, and the SHA‑256 hash of ","type":"text"},{"type":"codeVoice","code":"graph.json"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"text":"Markdown Text","type":"heading","level":2,"anchor":"Markdown-Text"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","isActive":true,"type":"reference"},{"text":": Splits Markdown files into named sections using lines of the form ","type":"text"},{"type":"codeVoice","code":"=== node: <section-id> ==="},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"text":"Text Providers","type":"heading","level":3,"anchor":"Text-Providers"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","isActive":true,"type":"reference"},{"text":": Minimal providers that parse a file on each request.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider","isActive":true,"type":"reference"},{"text":": Actor‑based providers with LRU caches and memory‑pressure purging.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Both cached providers accept a "},{"type":"codeVoice","code":"maxBytes"},{"type":"text","text":" budget and evict least‑recently‑used files when the cache exceeds this size. Memory pressure notifications trigger a full purge."}],"type":"paragraph"},{"text":"Errors","type":"heading","level":2,"anchor":"Errors"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError","isActive":true,"type":"reference"},{"text":": Throws when a requested text section is missing.","type":"text"}],"type":"paragraph"}]}]}]}],"variants":[{"paths":["\/documentation\/storykit\/contentio"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Load, compile, and serve story content and text."}],"sections":[],"references":{"doc://StoryKit/documentation/StoryKit/Story":{"title":"Story","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","url":"\/documentation\/storykit\/story","abstract":[{"type":"text","text":"A complete story graph plus metadata and a starting node."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Story","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Story","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryLoader":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryLoader"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader","abstract":[{"text":"Loads a Story from a ","type":"text"},{"code":"story.json","type":"codeVoice"},{"text":" file.","type":"text"}],"title":"StoryLoader","navigatorTitle":[{"kind":"identifier","text":"StoryLoader"}],"url":"\/documentation\/storykit\/storyloader","kind":"symbol","type":"topic"},"doc://StoryKit/documentation/StoryKit":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","title":"StoryKit","url":"\/documentation\/storykit","role":"collection","type":"topic","kind":"symbol","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/StoryBundleLoader":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryBundleLoader","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"StoryBundleLoader","kind":"identifier"}],"title":"StoryBundleLoader","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader","abstract":[{"type":"text","text":"Loads a Story from a compiled bundle’s "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":" file."}],"role":"symbol","url":"\/documentation\/storykit\/storybundleloader"},"doc://StoryKit/documentation/StoryKit/CachedSourceTextProvider":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider","title":"CachedSourceTextProvider","abstract":[{"text":"An actor-based provider that caches parsed source files with LRU eviction and memory pressure purge.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CachedSourceTextProvider"}],"url":"\/documentation\/storykit\/cachedsourcetextprovider","navigatorTitle":[{"text":"CachedSourceTextProvider","kind":"identifier"}],"type":"topic"},"doc://StoryKit/documentation/StoryKit/BundleTextProvider":{"title":"BundleTextProvider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","url":"\/documentation\/storykit\/bundletextprovider","abstract":[{"type":"text","text":"A simple text provider for compiled bundles that parses each request."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BundleTextProvider","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"BundleTextProvider","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StorySourceLayout":{"kind":"symbol","title":"StorySourceLayout","navigatorTitle":[{"text":"StorySourceLayout","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StorySourceLayout"}],"abstract":[{"type":"text","text":"Describes the on-disk layout for a human-authored story source."}],"type":"topic","role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout","url":"\/documentation\/storykit\/storysourcelayout"},"doc://StoryKit/documentation/StoryKit/StoryIOError":{"title":"StoryIOError","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError","url":"\/documentation\/storykit\/storyioerror","abstract":[{"type":"text","text":"Errors thrown while loading Markdown text or locating sections."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryIOError","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"StoryIOError","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/SourceTextProvider":{"role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider","title":"SourceTextProvider","type":"topic","kind":"symbol","url":"\/documentation\/storykit\/sourcetextprovider","navigatorTitle":[{"kind":"identifier","text":"SourceTextProvider"}],"abstract":[{"type":"text","text":"A simple text provider that parses the source file each time."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceTextProvider"}]},"doc://StoryKit/documentation/StoryKit/TextSectionParser":{"role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","type":"topic","title":"TextSectionParser","url":"\/documentation\/storykit\/textsectionparser","kind":"symbol","navigatorTitle":[{"text":"TextSectionParser","kind":"identifier"}],"abstract":[{"text":"Parses Markdown files that contain multiple node sections separated by a special token.","type":"text"},{"text":" ","type":"text"},{"text":"Token format (at start of line):","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"=== node: "},{"text":" ===","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Splits Markdown into labeled sections using lines like "},{"type":"codeVoice","code":"=== node: <section-id> ==="},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextSectionParser","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryCompiler":{"role":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","type":"topic","title":"StoryCompiler","url":"\/documentation\/storykit\/storycompiler","kind":"symbol","navigatorTitle":[{"text":"StoryCompiler","kind":"identifier"}],"abstract":[{"type":"text","text":"Compiles a source folder into a directory-based bundle for runtime use."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryCompiler","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryBundleLayout":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoryBundleLayout"}],"type":"topic","navigatorTitle":[{"text":"StoryBundleLayout","kind":"identifier"}],"title":"StoryBundleLayout","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","abstract":[{"text":"Describes the on-disk layout for a compiled directory-based story bundle.","type":"text"}],"role":"symbol","url":"\/documentation\/storykit\/storybundlelayout"},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider":{"title":"CachedBundleTextProvider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider","url":"\/documentation\/storykit\/cachedbundletextprovider","abstract":[{"text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge.","type":"text"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"CachedBundleTextProvider"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CachedBundleTextProvider"}]},"doc://StoryKit/documentation/StoryKit/StoryBundleManifest":{"url":"\/documentation\/storykit\/storybundlemanifest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryBundleManifest"}],"title":"StoryBundleManifest","navigatorTitle":[{"kind":"identifier","text":"StoryBundleManifest"}],"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest","abstract":[{"type":"text","text":"Metadata describing a compiled story bundle."}],"kind":"symbol"}}}