{"abstract":[{"text":"Load, compile, and serve story content and text.","type":"text"}],"sections":[],"metadata":{"roleHeading":"Article","modules":[{"name":"StoryKit"}],"role":"article","title":"Content I\/O"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"StoryKit handles authoring and runtime content formats, text parsing, and compiled bundle manifests."}]},{"anchor":"Layouts-and-Loaders","type":"heading","level":2,"text":"Layouts and Loaders"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout"},{"text":": Describes a source folder with ","type":"text"},{"code":"story.json","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"texts\/"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","isActive":true},{"text":": Describes a compiled ","type":"text"},{"type":"codeVoice","code":".storybundle"},{"text":" directory.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader"},{"text":": Loads a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","type":"reference"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"story.json"},{"text":" file.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader","type":"reference","isActive":true},{"text":": Loads a ","type":"text"},{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","isActive":true},{"type":"text","text":" from a bundle’s "},{"type":"codeVoice","code":"graph.json"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"type":"heading","level":2,"text":"Compiler and Manifest","anchor":"Compiler-and-Manifest"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","isActive":true},{"type":"text","text":": Compiles a source folder into a bundle."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest","isActive":true,"type":"reference"},{"text":": Records schema version, story metadata, build time, and the SHA‑256 hash of ","type":"text"},{"code":"graph.json","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"type":"heading","anchor":"Markdown-Text","level":2,"text":"Markdown Text"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","type":"reference","isActive":true},{"text":": Splits Markdown files into named sections using lines of the form ","type":"text"},{"code":"=== node: <section-id> ===","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"level":3,"text":"Text Providers","anchor":"Text-Providers","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","isActive":true,"type":"reference"},{"type":"text","text":": Minimal providers that parse a file on each request."}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider"},{"type":"text","text":": Actor‑based providers with LRU caches and memory‑pressure purging."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Both cached providers accept a ","type":"text"},{"code":"maxBytes","type":"codeVoice"},{"text":" budget and evict least‑recently‑used files when the cache exceeds this size. Memory pressure notifications trigger a full purge.","type":"text"}]},{"level":2,"type":"heading","anchor":"Errors","text":"Errors"},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError"},{"type":"text","text":": Throws when a requested text section is missing."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/StoryKit\/documentation\/StoryKit\/ContentIO"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/StoryKit\/documentation\/StoryKit"]]},"kind":"article","variants":[{"paths":["\/documentation\/storykit\/contentio"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://StoryKit/documentation/StoryKit/StoryLoader":{"role":"symbol","kind":"symbol","title":"StoryLoader","type":"topic","navigatorTitle":[{"text":"StoryLoader","kind":"identifier"}],"url":"\/documentation\/storykit\/storyloader","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryLoader","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryLoader","kind":"identifier"}],"abstract":[{"text":"Loads a Story from a ","type":"text"},{"code":"story.json","type":"codeVoice"},{"type":"text","text":" file."}]},"doc://StoryKit/documentation/StoryKit/CachedBundleTextProvider":{"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CachedBundleTextProvider","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedBundleTextProvider","title":"CachedBundleTextProvider","url":"\/documentation\/storykit\/cachedbundletextprovider","abstract":[{"text":"An actor-based provider that caches parsed bundle files with LRU eviction and memory pressure purge.","type":"text"}],"navigatorTitle":[{"text":"CachedBundleTextProvider","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://StoryKit/documentation/StoryKit/SourceTextProvider":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SourceTextProvider","kind":"identifier"}],"type":"topic","title":"SourceTextProvider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/SourceTextProvider","abstract":[{"type":"text","text":"A simple text provider that parses the source file each time."}],"navigatorTitle":[{"kind":"identifier","text":"SourceTextProvider"}],"url":"\/documentation\/storykit\/sourcetextprovider"},"doc://StoryKit/documentation/StoryKit/StorySourceLayout":{"role":"symbol","kind":"symbol","title":"StorySourceLayout","type":"topic","navigatorTitle":[{"text":"StorySourceLayout","kind":"identifier"}],"url":"\/documentation\/storykit\/storysourcelayout","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StorySourceLayout","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StorySourceLayout","kind":"identifier"}],"abstract":[{"text":"Describes the on-disk layout for a human-authored story source.","type":"text"}]},"doc://StoryKit/documentation/StoryKit/StoryBundleLoader":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoryBundleLoader"}],"role":"symbol","url":"\/documentation\/storykit\/storybundleloader","navigatorTitle":[{"text":"StoryBundleLoader","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLoader","abstract":[{"type":"text","text":"Loads a Story from a compiled bundle’s "},{"code":"graph.json","type":"codeVoice"},{"type":"text","text":" file."}],"kind":"symbol","title":"StoryBundleLoader"},"doc://StoryKit/documentation/StoryKit/Story":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/Story","kind":"symbol","title":"Story","abstract":[{"type":"text","text":"A complete story graph plus metadata and a starting node."}],"type":"topic","url":"\/documentation\/storykit\/story","navigatorTitle":[{"text":"Story","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Story","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryCompiler":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryCompiler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryCompiler","abstract":[{"text":"Compiles a source folder into a directory-based bundle for runtime use.","type":"text"}],"title":"StoryCompiler","navigatorTitle":[{"text":"StoryCompiler","kind":"identifier"}],"url":"\/documentation\/storykit\/storycompiler"},"doc://StoryKit/documentation/StoryKit/CachedSourceTextProvider":{"abstract":[{"type":"text","text":"An actor-based provider that caches parsed source files with LRU eviction and memory pressure purge."}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/CachedSourceTextProvider","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CachedSourceTextProvider"}],"navigatorTitle":[{"kind":"identifier","text":"CachedSourceTextProvider"}],"kind":"symbol","role":"symbol","title":"CachedSourceTextProvider","url":"\/documentation\/storykit\/cachedsourcetextprovider","type":"topic"},"doc://StoryKit/documentation/StoryKit/StoryBundleLayout":{"navigatorTitle":[{"text":"StoryBundleLayout","kind":"identifier"}],"title":"StoryBundleLayout","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoryBundleLayout"}],"url":"\/documentation\/storykit\/storybundlelayout","kind":"symbol","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleLayout","type":"topic","abstract":[{"type":"text","text":"Describes the on-disk layout for a compiled directory-based story bundle."}]},"doc://StoryKit/documentation/StoryKit/StoryBundleManifest":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryBundleManifest","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Metadata describing a compiled story bundle."}],"title":"StoryBundleManifest","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryBundleManifest","url":"\/documentation\/storykit\/storybundlemanifest","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"StoryBundleManifest","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit":{"type":"topic","abstract":[{"text":"Build rich, data‑driven “choose your own adventure” experiences with a small, composable core and first‑class tooling.","type":"text"}],"title":"StoryKit","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit","url":"\/documentation\/storykit","role":"collection","kind":"symbol"},"doc://StoryKit/documentation/StoryKit/TextSectionParser":{"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/TextSectionParser","kind":"symbol","title":"TextSectionParser","type":"topic","abstract":[{"type":"text","text":"Parses Markdown files that contain multiple node sections separated by a special token."},{"type":"text","text":" "},{"text":"Token format (at start of line):","type":"text"},{"text":" ","type":"text"},{"text":"=== node: ","type":"text"},{"text":" ===","type":"text"},{"text":" ","type":"text"},{"text":"Splits Markdown into labeled sections using lines like ","type":"text"},{"code":"=== node: <section-id> ===","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/storykit\/textsectionparser","navigatorTitle":[{"text":"TextSectionParser","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextSectionParser","kind":"identifier"}]},"doc://StoryKit/documentation/StoryKit/StoryIOError":{"abstract":[{"text":"Errors thrown while loading Markdown text or locating sections.","type":"text"}],"identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/StoryIOError","title":"StoryIOError","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StoryIOError"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoryIOError","kind":"identifier"}],"type":"topic","url":"\/documentation\/storykit\/storyioerror"},"doc://StoryKit/documentation/StoryKit/BundleTextProvider":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BundleTextProvider","kind":"identifier"}],"type":"topic","title":"BundleTextProvider","identifier":"doc:\/\/StoryKit\/documentation\/StoryKit\/BundleTextProvider","abstract":[{"text":"A simple text provider for compiled bundles that parses each request.","type":"text"}],"navigatorTitle":[{"text":"BundleTextProvider","kind":"identifier"}],"url":"\/documentation\/storykit\/bundletextprovider"}}}