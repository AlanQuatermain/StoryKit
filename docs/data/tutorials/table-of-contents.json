{"sections":[{"backgroundImage":"placeholder.svg","image":"placeholder.svg","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-1-Building-Your-First-Story","isActive":true,"overridingTitle":"Get started","type":"reference"},"title":"Meet StoryKit","content":[{"inlineContent":[{"type":"text","text":"StoryKit is a data‑driven engine and toolset for building branching, text‑forward experiences. These tutorials guide you from validating a story, to playing it with a small Swift app, to layering mechanics like checks, effects, and actions."}],"type":"paragraph"}],"kind":"hero"},{"name":null,"image":null,"content":[],"chapters":[{"content":[{"inlineContent":[{"type":"text","text":"Learn the authoring model, fix common validation issues, and compile to a runtime bundle."}],"type":"paragraph"}],"tutorials":["doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-1-Building-Your-First-Story"],"image":"placeholder.svg","name":"Building and Validating a Story"},{"content":[{"inlineContent":[{"type":"text","text":"Build a small CLI that loads a bundle, renders text, shows choices, and advances the engine."}],"type":"paragraph"}],"tutorials":["doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-2-Playing-a-Story-in-Swift"],"image":"placeholder.svg","name":"Playing a Story with StoryEngine"},{"content":[{"inlineContent":[{"type":"text","text":"Extend your runner with state, predicates\/effects, a simple battle, a final ritual, and autosave."}],"type":"paragraph"}],"tutorials":["doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-3-Adding-State-and-Skill-Checks"],"image":"placeholder.svg","name":"Checks, Effects, Actions, Battles, and the Ritual"}],"kind":"volume"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/StoryKit\/tutorials\/table-of-contents","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/table-of-contents"]}],"kind":"overview","hierarchy":{"paths":[],"reference":"doc:\/\/StoryKit\/tutorials\/table-of-contents"},"metadata":{"estimatedTime":"2hr 5min","role":"overview","title":"Meet StoryKit","category":"StoryKit","categoryPathComponent":"table-of-contents"},"references":{"doc://StoryKit/tutorials/StoryKit/Tutorial-3-Adding-State-and-Skill-Checks":{"identifier":"doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-3-Adding-State-and-Skill-Checks","type":"topic","url":"\/tutorials\/storykit\/tutorial-3-adding-state-and-skill-checks","abstract":[{"text":"In this tutorial you’ll enrich the minimal CLI from Tutorial 2 with game‑flavored mechanics: roll‑under d20 checks, health and sanity tracking, inventory and flags, predicates and effects to gate and mutate state, a simple multi‑round fight with flee, and an ordered ritual that branches to different endings. The emphasis is equal parts “why” and “how”: why these pieces fit the tone, and how to implement them using StoryKit’s registries and engine flow.","type":"text"}],"title":"Checks, Effects, Actions, Battles, and the Ritual","kind":"project","role":"project","estimatedTime":"1hr 0min"},"doc://StoryKit/tutorials/table-of-contents":{"type":"topic","identifier":"doc:\/\/StoryKit\/tutorials\/table-of-contents","url":"\/tutorials\/table-of-contents","title":"Meet StoryKit","role":"overview","kind":"overview","abstract":[{"type":"text","text":"StoryKit is a data‑driven engine and toolset for building branching, text‑forward experiences. These tutorials guide you from validating a story, to playing it with a small Swift app, to layering mechanics like checks, effects, and actions."}]},"doc://StoryKit/tutorials/StoryKit/Tutorial-2-Playing-a-Story-in-Swift":{"type":"topic","identifier":"doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-2-Playing-a-Story-in-Swift","title":"Playing a Story with StoryEngine","url":"\/tutorials\/storykit\/tutorial-2-playing-a-story-in-swift","estimatedTime":"35min","role":"project","kind":"project","abstract":[{"text":"In this tutorial you will build a small command–line runner that loads the compiled Haunted House bundle and lets a player move through the narrative by choosing options. You will learn how to load a bundle, construct a ","type":"text"},{"code":"StoryEngine","type":"codeVoice"},{"text":", print the current node’s prose, enumerate available choices, and call ","type":"text"},{"code":"select(choiceID:)","type":"codeVoice"},{"text":" to advance. The result is a minimal, idiomatic Swift program that uses StoryKit as intended.","type":"text"}]},"placeholder.svg":{"variants":[{"url":"\/images\/StoryKit\/placeholder.svg","traits":["1x","light"]}],"type":"image","identifier":"placeholder.svg","alt":"Placeholder chapter image."},"doc://StoryKit/tutorials/StoryKit/Tutorial-1-Building-Your-First-Story":{"type":"topic","identifier":"doc:\/\/StoryKit\/tutorials\/StoryKit\/Tutorial-1-Building-Your-First-Story","url":"\/tutorials\/storykit\/tutorial-1-building-your-first-story","title":"Building and Validating a Story","estimatedTime":"30min","role":"project","kind":"project","abstract":[{"type":"text","text":"In this tutorial you’ll get comfortable with the StoryKit authoring model and the validator that keeps your story graph honest. You’ll start from a small broken version of the Haunted House story and repair it step by step until it validates cleanly and compiles into a runtime‑ready bundle. Along the way, you’ll examine the on‑disk formats, run the CLI, and verify each fix by re‑running validation."}]}}}